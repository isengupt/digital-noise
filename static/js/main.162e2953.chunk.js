(this["webpackJsonpr3f-moksha"]=this["webpackJsonpr3f-moksha"]||[]).push([[0],{35:function(e,t,n){},36:function(e,t,n){"use strict";n.r(t);var r=n(2),a=n(3),o=n(12),i=n.n(o),c=n(0),s=n(4),v=n(38),l=n(1),u=n(9),m=n.n(u),f=n(5);var d={uniforms:{time:{type:"f",value:0},lineWidth:{type:"f",value:0},rotation:{type:"f",value:0},repeat:{type:"f",value:0},resolution:{type:"v4",value:new l.Vector4},uvRate1:{value:new l.Vector2(1,1)}},extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:l.DoubleSide,vertexShader:"\nattribute vec3 color;\nvarying vec2 vUv;\nvarying vec3 vPosition;\n\n  void main() {\n    vUv = uv;\n\n    vPosition = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}\n",fragmentShader:"\n\nuniform float time;\nuniform float rotation;\nuniform float repeat;\nuniform float lineWidth;\nuniform float progress;\nuniform sampler2D texture1;\nuniform vec4 resolution;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nfloat PI = 3.141592653589793238;\n\nfloat aastep(float threshold, float value) {\n  #ifdef GL_OES_standard_derivatives\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\n  #else\n    return step(threshold, value);\n  #endif  \n}\n\nfloat line(vec2 uv, float width) {\n  float u = 0.;\nif (uv.x < 0.01) {\n  u = 0.;\n} else if (uv.x > 1.-0.01) {\n  u = 0.;\n} else {\n  u = aastep(width, uv.x) - aastep(1. - width, uv.x );\n}\n\n  \n  return u;\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\n//\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\nvoid main(){\n\n  //vec2 newUV = gl_FragCoord.xy / resolution.xy;\n\n\n  vec2 newUV = vPosition.xy;\n  newUV = rotate(newUV,rotation);\n  float noise = cnoise(vec3(newUV + time / 40. + vPosition.z /10.,time/100.));\n  newUV += vec2(noise);\n  newUV = vec2(fract((newUV.x )*repeat),newUV.y);\n\n\n\n  \n    gl_FragColor = vec4(vec3(line(newUV, lineWidth)),1.);\n   // gl_FragColor = vec4(vPosition,1.);\n  \n\n}\n"};let x=Math.PI/4;function g(e){let t=e.mouseTarget,n=e.children,o=e.vAlign,i=void 0===o?"center":o,v=e.hAlign,u=void 0===v?"center":v,m=(e.size,e.color,Object(f.a)(e,["mouseTarget","children","vAlign","hAlign","size","color"]));const g=Object(s.d)(l.FontLoader,"/bold.blob"),p=Object(c.useMemo)((()=>({font:g,size:1.3,height:.2,curveSegments:12,bevelEnabled:!1})),[g]);Object(s.c)((({clock:e})=>{y.current.material.uniforms.time.value=e.elapsedTime,y.current.material.uniforms.rotation.value=x,y.current.material.uniforms.lineWidth.value=.4,y.current.material.uniforms.repeat.value=10,y.current.rotation.y=-t.current.x/4,y.current.rotation.x=t.current.y/4}));const y=Object(s.f)((e=>{const t=new l.Vector3;e.geometry.computeBoundingBox(),e.geometry.boundingBox.getSize(t),e.position.x="center"===u?-t.x/2:"right"===u?0:-t.x,e.position.y="center"===i?-t.y/2:"top"===i?0:-t.y}),[n]);return Object(r.jsx)("group",Object(a.a)(Object(a.a)({},m),{},{scale:[1,1,1],translate:[-1.5,-.5,-.2],children:Object(r.jsxs)("mesh",{ref:y,children:[Object(r.jsx)("textBufferGeometry",{attach:"geometry",translate:[-1.5,-.5,-.2],args:[n,p]}),Object(r.jsx)("shaderMaterial",{attach:"material",args:[d]})]})}))}var p=n(6),y=n.p+"static/media/Img4.ae8ebf5a.jpg",h=n.p+"static/media/Img5.00a85aaf.jpg",j=n.p+"static/media/10.97f5f239.jpg",b=n(37);const O=Object(b.a)({effectFactor:1.2,dispFactor:0,tex:void 0,tex2:void 0,disp:void 0},"varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }","varying vec2 vUv;\n  uniform sampler2D tex;\n  uniform sampler2D tex2;\n  uniform sampler2D disp;\n  uniform float _rot;\n  uniform float dispFactor;\n  uniform float effectFactor;\n  void main() {\n    vec2 uv = vUv;\n    vec4 disp = texture2D(disp, uv);\n    vec2 distortedPosition = vec2(uv.x, uv.y + dispFactor * (disp.r*effectFactor));\n    vec2 distortedPosition2 = vec2(uv.x, uv.y - (1.0 - dispFactor) * (disp.r*effectFactor));\n    vec4 _texture = texture2D(tex, distortedPosition);\n    vec4 _texture2 = texture2D(tex2, distortedPosition2);\n    vec4 finalTexture = mix(_texture, _texture2, dispFactor);\n    gl_FragColor = finalTexture;\n  }");Object(s.b)({ImageFadeMaterial:O});var w=function(){const e=Object(c.useRef)(),t=Object(s.d)(l.TextureLoader,[y,h,j]),n=Object(p.a)(t,3),a=n[0],o=n[1],i=n[2],v=Object(c.useState)(!1),u=Object(p.a)(v,2),m=(u[0],u[1]),f=Object(s.e)().viewport;return Object(s.c)((({clock:t})=>{e.current.dispFactor=Math.sin(t.elapsedTime/6)})),Object(r.jsxs)("mesh",{onPointerMove:e=>m(!0),onPointerOut:e=>m(!1),scale:[1,1,1],children:[Object(r.jsx)("planeBufferGeometry",{attach:"geometry",args:[f.width-1,f.height-1,1,1]}),Object(r.jsx)("imageFadeMaterial",{ref:e,attach:"material",tex:a,tex2:o,disp:i})]})};n(23);var z={sections:4,pages:4,zoom:75,paragraphs:[{offset:1.1,factor:1,header:"Millenium Project",image:n.p+"static/media/img3.e3979111.jpg",aspect:3,text:"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old."},{offset:2,factor:1.1,header:"Diamond Road",image:n.p+"static/media/img6.49023073.jpg",aspect:3,text:"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable."}],top:Object(c.createRef)()};var P="\n\nuniform float time;\nuniform float progress;\nuniform sampler2D texture1;\nuniform sampler2D image;\nuniform sampler2D displacement;\nuniform vec4 resolution;\n\nvarying vec2 vUv;\nvarying vec3 vPosition;\nfloat PI = 3.141592653589793238;\nvoid main(){\n\n  vec4 displace = texture2D(displacement, vUv);\n\n  vec2 displacedUV = vec2(vUv.x + 0.1*sin(vUv.y*19. + time/4.), vUv.y);\n  vec4 color = texture2D(image, displacedUV);\n  \n\n  \n  gl_FragColor = color;\n  \n\n}\n",_="\nattribute vec3 color;\nvarying vec3 vPosition;\nvarying vec2 vUv;\n\n  void main() {\n    vUv = uv;\n\n\n    vPosition = position;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}\n",U=n.p+"static/media/img2.cf8260ac.jpg",V=n.p+"static/media/disp3.80f08c53.jpg",M=n.p+"static/media/text.57e51cf4.png";var T=function(e){const t=Object(c.useRef)();return Object(s.c)((({clock:e})=>{t.current.material.uniforms.time.value=e.elapsedTime,t.current.material.uniforms.progress.value=Math.sin(e.elapsedTime/2)})),Object(s.e)().viewport,Object(r.jsxs)("mesh",Object(a.a)(Object(a.a)({},e),{},{ref:t,children:[Object(r.jsx)("planeGeometry",{attach:"geometry",args:[4,3,1,1]}),Object(r.jsx)("shaderMaterial",{attach:"material",args:[{extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:l.DoubleSide,uniforms:{time:{type:"f",value:0},progress:{type:"f",value:0},mouse:{type:"v3",value:new l.Vector3},image:{type:"t",value:(new l.TextureLoader).load(e.image)},displacement:{type:"t",value:(new l.TextureLoader).load(V)},resolution:{type:"v4",value:new l.Vector4},uvRate1:{value:new l.Vector2(1,1)}},vertexShader:_,fragmentShader:P}]})]}))};l.DoubleSide,new l.Vector3,(new l.TextureLoader).load(U),(new l.TextureLoader).load(M),(new l.TextureLoader).load(V),new l.Vector4,new l.Vector2(1,1);l.DoubleSide,new l.Vector3,(new l.TextureLoader).load(U),(new l.TextureLoader).load(M),(new l.TextureLoader).load(V),new l.Vector4,new l.Vector2(1,1);var S=function(e){const t=Object(c.useRef)();Object(s.c)((({clock:e})=>{t.current.material.uniforms.time.value=e.elapsedTime,t.current.material.uniforms.progress.value=Math.sin(e.elapsedTime/2)}));const n=Object(s.e)().viewport;return Object(r.jsxs)("mesh",Object(a.a)(Object(a.a)({},e),{},{ref:t,children:[Object(r.jsx)("planeGeometry",{attach:"geometry",args:[n.width-1,n.height-1,1,1]}),Object(r.jsx)("shaderMaterial",{attach:"material",args:[{extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:l.DoubleSide,uniforms:{time:{type:"f",value:0},progress:{type:"f",value:0},mouse:{type:"v3",value:new l.Vector3},image:{type:"t",value:(new l.TextureLoader).load(e.image)},text:{type:"t",value:(new l.TextureLoader).load(M)},displacement:{type:"t",value:(new l.TextureLoader).load(V)},resolution:{type:"v4",value:new l.Vector4},uvRate1:{value:new l.Vector2(1,1)}},vertexShader:_,fragmentShader:P}]})]}))};var D={extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:l.DoubleSide,uniforms:{time:{type:"f",value:0},progress:{type:"f",value:0},mouse:{type:"v3",value:new l.Vector3},image:{type:"t",value:(new l.TextureLoader).load(U)},text:{type:"t",value:(new l.TextureLoader).load(M)},displacement:{type:"t",value:(new l.TextureLoader).load(V)},resolution:{type:"v4",value:new l.Vector4},uvRate1:{value:new l.Vector2(1,1)}},vertexShader:_,fragmentShader:"\n\nuniform float time;\nuniform float progress;\nuniform sampler2D texture1;\nuniform sampler2D image;\nuniform sampler2D displacement;\nuniform vec4 resolution;\n\nvarying vec2 vUv;\nvarying vec3 vPosition;\nfloat PI = 3.141592653589793238;\nvoid main(){\n\n  vec4 displace = texture2D(displacement, vUv.yx);\n\n  vec2 displacedUV = vec2(\n    vUv.x , \n    vUv.y ) ;\n\n\n\n    displacedUV.y = mix(vUv.y, displace.r, progress);\n\n\n\n  vec4 color = texture2D(image, displacedUV);\n\n  color.r = texture2D(image, displacedUV + vec2(0.,10.* 0.005)*progress).r;\n  color.g = texture2D(image, displacedUV + vec2(0.,10.* 0.01)*progress).g;\n  color.b = texture2D(image, displacedUV + vec2(0.,10.* 0.02)*progress).b;\n  \n\n  \n  gl_FragColor = color;\n  \n\n}\n"};var F=function(e){const t=Object(c.useRef)();Object(s.c)((({clock:e})=>{t.current.material.uniforms.time.value=e.elapsedTime,t.current.material.uniforms.progress.value=Math.sin(e.elapsedTime/2)}));const n=Object(s.e)().viewport;return Object(r.jsxs)("mesh",Object(a.a)(Object(a.a)({},e),{},{ref:t,children:[Object(r.jsx)("planeGeometry",{attach:"geometry",args:[n.width-1,n.height-1,1,1]}),Object(r.jsx)("shaderMaterial",{attach:"material",args:[D]})]}))},L=n.p+"static/media/img1.04e4da82.jpg";class C extends l.ShaderMaterial{constructor(){super({vertexShader:"uniform float scale;\n      uniform float shift;\n      varying vec2 vUv;\n      void main() {\n        vec3 pos = position;\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 2.0) * 0.125);\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n      }",fragmentShader:"uniform sampler2D tex;\n      uniform float hasTexture;\n      uniform float shift;\n      uniform float scale;\n      uniform vec3 color;\n      uniform float opacity;\n      varying vec2 vUv;\n      void main() {\n        float angle = 1.55;\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\n        vec4 cr = texture2D(tex, p + offset);\n        vec4 cga = texture2D(tex, p);\n        vec4 cb = texture2D(tex, p - offset);\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        else gl_FragColor = vec4(color, opacity);\n      }",uniforms:{tex:{value:null},hasTexture:{value:0},scale:{value:0},shift:{value:0},opacity:{value:1},color:{value:new l.Color("white")}}})}set scale(e){this.uniforms.scale.value=e}get scale(){return this.uniforms.scale.value}set shift(e){this.uniforms.shift.value=e}get shift(){return this.uniforms.shift.value}set map(e){this.uniforms.hasTexture.value=!!e,this.uniforms.tex.value=e}get map(){return this.uniforms.tex.value}get color(){return this.uniforms.color.value}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}}Object(s.b)({CustomMaterial:C});const I=Object(c.createContext)(0);function N(e){let t=e.children,n=e.offset,o=e.factor,i=Object(f.a)(e,["children","offset","factor"]);const v=R(),l=v.offset,u=v.sectionHeight,d=Object(c.useRef)();return n=void 0!==n?n:l,Object(s.c)((()=>{const e=d.current.position.y,t=z.top.current;d.current.position.y=m()(e,t/z.zoom*o,.1)})),Object(r.jsx)(I.Provider,{value:n,children:Object(r.jsx)("group",Object(a.a)(Object(a.a)({},i),{},{position:[0,-u*n*o,0],children:Object(r.jsx)("group",{ref:d,children:t})}))})}function R(){const e=z.sections,t=z.pages,n=z.zoom,r=Object(s.e)(),a=r.size,o=r.viewport,i=Object(c.useContext)(I),v=o.width*n,l=o.height*n,u=v/n,m=l/n,f=a.width<700;return{viewport:o,offset:i,viewportWidth:v,viewportHeight:l,canvasWidth:u,canvasHeight:m,mobile:f,margin:u*(f?.2:.1),contentMaxWidth:u*(f?.8:.6),sectionHeight:m*((t-1)/(e-1)),offsetFactor:(i+1)/e}}var B=Object(c.forwardRef)(((e,t)=>{let n=e.color,o=void 0===n?"white":n,i=e.shift,v=void 0===i?1:i,l=e.opacity,u=void 0===l?1:l,d=e.args,x=e.map,g=Object(f.a)(e,["color","shift","opacity","args","map"]);const p=R(),y=p.viewportHeight,h=p.offsetFactor,j=Object(c.useRef)();let b=z.top.current;return Object(s.c)((()=>{const e=z.pages,t=z.top;j.current.scale=m()(j.current.scale,h-t.current/((e-1)*y),.1),j.current.shift=m()(j.current.shift,(t.current-b)/v,.1),b=t.current})),Object(r.jsxs)("mesh",Object(a.a)(Object(a.a)({ref:t},g),{},{children:[Object(r.jsx)("planeBufferGeometry",{args:d}),Object(r.jsx)("customMaterial",{ref:j,color:o,map:x,transparent:!0,opacity:u})]}))})),A=n.p+"static/media/img1.1dd98fec.jpg";let k=(new l.TextureLoader).load(A);k.wrapS=k.wrapT=l.MirroredRepeatWrapping;var G={fragmentShader:"\n//precision highp float;\nuniform float time;\nuniform float progress;\nuniform sampler2D landscape;\nuniform vec4 resolution;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 eyeVector;\nvarying vec3 vBary;\nfloat PI = 3.141592653589793238;\n\nvec2 hash22(vec2 p) {\n  p = fract(p * vec2(5.3983, 5.4427));\n  p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n\n  return fract(vec2(p.x * p.y * 95.4337, p.x * p.y * 97.597));\n}\n  void main() {\n\n    vec3 X = dFdx(vNormal);\n    vec3 Y = dFdy(vNormal);\n    vec3 normal = normalize(cross(X,Y));\n    float diffuse = dot(normal, vec3(1.));\n    vec2 rand = hash22(vec2(floor(diffuse*10.)));\nvec2 uuv = vec2(\n  sign(rand.x-0.5)*1. + (rand.x -0.5)*0.3,\n  sign(rand.y -0.5)*1. + (rand.y-0.5)*0.3\n  \n  );\nfloat fresnel = abs(1. + dot(eyeVector, normal));\nvec2 uv =  uuv *gl_FragCoord.xy / vec2(1000.);\n\n\n    vec3 refracted = refract(eyeVector,normal, 1./3.);\n    uv += 0.2 * refracted.xy;\n\n\n\n\n    vec4 t = texture2D(landscape, uv);\n\n    \n    //gl_FragColor = vec4(vUv.x, vUv.y, 0, 1.0);\n\n\n  gl_FragColor = t*(1. - fresnel);\n  //gl_FragColor = vec4(vBary,1.);\n\n  //gl_FragColor = vec4(vec3(fresnel),1.);\n  }\n",vertexShader:"\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 eyeVector;\nattribute vec3 aBary;\nvarying vec3 vBary;\nfloat PI = 3.141592653589793238;\n\n//\tSimplex 3D Noise \n//\tby Ian McEwan, Ashima Arts\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\nfloat snoise(vec3 v){ \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //  x0 = x0 - 0. + 0.0 * C \n  vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n  vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n  vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n// Permutations\n  i = mod(i, 289.0 ); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients\n// ( N*N points uniformly over a square, mapped onto an octahedron.)\n  float n_ = 1.0/7.0; // N=7\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                dot(p2,x2), dot(p3,x3) ) );\n}\nvoid main() {\n  vUv = uv;\n  vBary = aBary;\n  vNormal = normalize(normalMatrix*normal);\n  float noisy = snoise(vNormal);\nvec3 newPosition = position + noisy*normal;\n  vec4 worldPosition = modelMatrix  * vec4(newPosition, 1.0);\n  eyeVector = normalize(worldPosition.xyz - cameraPosition);\n  //vec3 newPosition = position + vec3( sin((time + uv.x + uv.y) * 10.0) * 0.2,cos((time + uv.x + uv.y) * 10.0) *0.2,0);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}\n",extensions:{derivatives:"#extension GL_OES_standard_derivatives: enable"},uniforms:{time:{type:"f",value:0},uvRate1:{value:new l.Vector2(1,1)},resolution:{type:"v4",value:new l.Vector4},landscape:{value:k}}};let E=(new l.TextureLoader).load(A);E.wrapS=E.wrapT=l.MirroredRepeatWrapping;var W={fragmentShader:"\n//precision highp float;\nuniform float time;\nuniform float progress;\nuniform sampler2D landscape;\nuniform vec4 resolution;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 eyeVector;\nvarying vec3 vBary;\nfloat PI = 3.141592653589793238;\n\nvec2 hash22(vec2 p) {\n  p = fract(p * vec2(5.3983, 5.4427));\n  p += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\n\n  return fract(vec2(p.x * p.y * 95.4337, p.x * p.y * 97.597));\n}\n  void main() {\n\n    float width = 1.0;\n    vec3 d = fwidth(vBary);\n    vec3 s = smoothstep(d*(width + 0.5), d* (width - 0.5), vBary);\n\nfloat line = max(s.x, max(s.y,s.z));\nif(line < 0.1) discard;\n  gl_FragColor = vec4(mix(vec3(1.),vec3(0.), 1. - line) ,1.);\n  }\n",vertexShader:"\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 eyeVector;\nattribute vec3 aBary;\nvarying vec3 vBary;\nfloat PI = 3.141592653589793238;\nvoid main() {\n  vUv = uv;\n  vBary = aBary;\n  vNormal = normalize(normalMatrix*normal);\nvec3 newPosition = position;\n  vec4 worldPosition = modelMatrix  * vec4(newPosition, 1.0);\n  eyeVector = normalize(worldPosition.xyz - cameraPosition);\n  //vec3 newPosition = position + vec3( sin((time + uv.x + uv.y) * 10.0) * 0.2,cos((time + uv.x + uv.y) * 10.0) *0.2,0);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}\n",extensions:{derivatives:"#extension GL_OES_standard_derivatives: enable"},uniforms:{time:{type:"f",value:0},uvRate1:{value:new l.Vector2(1,1)},resolution:{type:"v4",value:new l.Vector4},landscape:{value:E}}},H=n(25),q=n(24),X=n(14),Y={uniforms:{tDiffuse:{value:null},rgbshift:{value:.3},resolution:{value:null},pixelSize:{value:1},time:{value:0}},vertexShader:"\n\n\t\tvarying highp vec2 vUv;\n\n\t\tvoid main() {\n\n\t\tvUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float pixelSize;\n\t\tuniform vec2 resolution;\nuniform float time;\nuniform float rgbshift;\n\t\tvarying highp vec2 vUv;\n\t\t\n\n\t\tfloat hash(vec2 p) { \n\t\t\treturn fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); \n\t\t}\n\n\t\tvoid main(){\n\t\t\t\n\t\t\tvec2 shift = vec2(0.01,0.01)\n\t\t\t*rgbshift\n\t\t\t;\n\t\t\tvec4 t = texture2D(tDiffuse, vUv);\n\t\t\tvec4 t1 = texture2D(tDiffuse, vUv+shift);\n\t\t\tvec4 t2 = texture2D(tDiffuse, vUv-shift);\n\t\t\tvec3 color = vec3((t.r + t.b + t.g)/3.);\n\t\t\tvec3 color1 = vec3((t1.r + t1.b + t1.g)/3.);\n\t\t\tvec3 color2 = vec3((t2.r + t2.b + t2.g)/3.);\n\t\t\t\n\n\t\t\tcolor = vec3(color1.r, color.g, color2.b);\n\t\t\tfloat val = hash(vUv+ time)*0.3;\n\t\t\tvec2 dxy = pixelSize / resolution;\n\t\t\tvec2 coord = dxy * floor( vUv / dxy );\n\t\t\tgl_FragColor = texture2D(tDiffuse, vUv);\n\t\t\tgl_FragColor = vec4(color * rgbshift, 1.);\n\t\t\t\n\t\t}"};function J(e){const t=Object(c.useRef)(),n=Object(c.useRef)(),a=Object(s.e)(),o=a.scene,i=a.gl,v=a.size,u=a.camera;Object(c.useMemo)((()=>new l.Vector2(v.width,v.height)),[]);return Object(c.useEffect)((()=>{t.current.setSize(v.width,v.height)}),[v]),Object(s.c)((({clock:e})=>{n.current.material.uniforms.time.value=e.elapsedTime})),Object(s.c)((()=>t.current.render()),1),Object(r.jsxs)("effectComposer",{ref:t,args:[i],children:[Object(r.jsx)("renderPass",{attachArray:"passes",scene:o,camera:u}),Object(r.jsx)("shaderPass",{ref:n,attachArray:"passes",args:[Y]})]})}Object(s.b)({EffectComposer:H.a,RenderPass:q.a,ShaderPass:X.a});let K=new l.IcosahedronBufferGeometry(1,1).attributes.position.array.length,Z=[];for(let se=0;se<K/3;se++)Z.push(0,0,1,0,1,0,1,0,0);let Q=new Float32Array(Z);function $(e){const t=Object(c.useRef)();return Object(s.c)((({clock:e})=>{t.current.rotation.x=e.elapsedTime/10,t.current.rotation.y=e.elapsedTime/10,t.current.material.uniforms.time.value=e.elapsedTime})),Object(r.jsxs)("mesh",Object(a.a)(Object(a.a)({},e),{},{ref:t,children:[Object(r.jsx)("icosahedronBufferGeometry",{attach:"geometry",args:[2.001,2],children:Object(r.jsx)("bufferAttribute",{attachObject:["attributes","aBary"],args:[Q,3]})}),Object(r.jsx)("shaderMaterial",{attach:"material",args:[W]})]}))}var ee=function(e){const t=Object(c.useRef)();return Object(s.c)((({clock:e})=>{t.current.rotation.x=e.elapsedTime/10,t.current.rotation.y=e.elapsedTime/10,t.current.material.uniforms.time.value=e.elapsedTime})),Object(r.jsxs)("mesh",Object(a.a)(Object(a.a)({},e),{},{ref:t,children:[Object(r.jsx)("icosahedronGeometry",{attach:"geometry",args:[2,2]}),Object(r.jsx)("shaderMaterial",{attach:"material",args:[G]})]}))};n(35);let te=Math.PI/4;function ne(e){let t=e.children,n=(e.mouseTarget,e.vAlign),o=void 0===n?"center":n,i=e.hAlign,v=void 0===i?"center":i,u=(e.size,e.color,Object(f.a)(e,["children","mouseTarget","vAlign","hAlign","size","color"]));const m=Object(s.d)(l.FontLoader,"/bold.blob"),x=(Object(c.useMemo)((()=>({font:m,size:1.5,height:.2,curveSegments:12,bevelEnabled:!1})),[m]),Object(c.useRef)()),g=Object(s.e)().viewport;Object(s.c)((({clock:e})=>{let t=e.elapsedTime;x.current.material.uniforms.time.value=t,x.current.position.z=-1.2,x.current.material.uniforms.rotation.value=te,x.current.material.uniforms.lineWidth.value=.4,x.current.material.uniforms.repeat.value=10}));Object(s.f)((e=>{const t=new l.Vector3;e.geometry.computeBoundingBox(),e.geometry.boundingBox.getSize(t),e.position.x="center"===v?-t.x/2:"right"===v?0:-t.x,e.position.y="center"===o?-t.y/2:"top"===o?0:-t.y}),[t]);return Object(r.jsx)("group",Object(a.a)(Object(a.a)({},u),{},{scale:[1,1,1],children:Object(r.jsxs)("mesh",{ref:x,children:[Object(r.jsx)("planeGeometry",{attach:"geometry",args:[g.width-1,g.height-1,1,1]}),Object(r.jsx)("shaderMaterial",{attach:"material",args:[d]})]})}))}function re(e){Object(c.useRef)();return Object(r.jsx)(ne,{hAlign:"center",mouseTarget:e.mouseTarget,position:[0,0,1],children:"MOKSHA"})}function ae(){const e=Object(c.useRef)();return Object(s.c)((()=>e.current.material.opacity=m()(e.current.material.opacity,0,.025))),Object(r.jsx)(B,{ref:e,color:"#0e0e0f",position:[0,0,200],scale:[100,100,1]})}function oe({image:e,index:t,offset:n,factor:a,header:o,aspect:i,text:c}){const s=R(),l=s.contentMaxWidth,u=s.canvasWidth,m=s.margin,f=s.mobile,d=i<1&&!f?.65:1,x=(u-l*d-m)/2,g=l*z.zoom*d,p=!(t%2);return Object(r.jsx)(N,{factor:a,offset:n,children:Object(r.jsxs)("group",{position:[p?-x:x,0,0],children:[Object(r.jsx)(v.a,{style:{width:g/(f?1:2),textAlign:p?"left":"right"},position:[p||f?-l*d/2:0,-l*d/2/i-.4,1],children:Object(r.jsx)("div",{tabIndex:t,children:c})}),Object(r.jsx)(T,{position:[p?-x:x,0,0],image:e})]})})}function ie({mouseTarget:e,mouseMoved:t,mouse:n}){const o=Object(s.d)(l.TextureLoader,z.paragraphs.map((({image:e})=>e)));Object(c.useMemo)((()=>o.forEach((e=>e.minFilter=l.LinearFilter))),[o]);const i=R(),u=(i.contentMaxWidth,i.canvasWidth),m=i.canvasHeight;i.mobile;return Object(r.jsxs)(r.Fragment,{children:[Object(r.jsxs)(N,{factor:1,offset:0,children:[Object(r.jsx)(N,{factor:1.2,children:Object(r.jsx)(re,{mouseTarget:e})}),Object(r.jsx)(N,{factor:-2,children:Object(r.jsx)(g,{hAlign:"center",position:[0,0,1],children:"WELCOME",mouseTarget:e})})]}),Object(r.jsx)(N,{factor:-1.1,offset:1,children:Object(r.jsx)(S,{image:L})}),Object(r.jsx)(N,{factor:-1.1,offset:2,children:Object(r.jsx)(F,{image:U})}),z.paragraphs.map(((e,t)=>Object(r.jsx)(oe,Object(a.a)(Object(a.a)({index:t},e),{},{image:e.image}),t))),Object(r.jsx)(N,{factor:1,offset:3,children:Object(r.jsx)(w,{})}),Object(r.jsxs)(N,{factor:1.25,offset:3,children:[Object(r.jsx)(ee,{position:[0,0,0]}),Object(r.jsx)(J,{}),Object(r.jsx)($,{position:[0,0,0]}),Object(r.jsx)(v.a,{className:"bottom-left",position:[-u/2,-m/2,0],children:"It is a long established fact that a reader"})]})]})}function ce(){const e=Object(c.useRef)({x:0,y:0}),t=Object(c.useRef)({x:0,y:0}),n=Object(c.useRef)();const a=e=>z.top.current=e.target.scrollTop;function o(n){e.current.x=2*(n.pageX/window.innerWidth-.5),e.current.y=2*(n.pageY/window.innerHeight-.5),t.current.x=t.current.x-.1*(t.current.x-e.current.x),t.current.y=t.current.y-.1*(t.current.y-e.current.y)}return Object(c.useEffect)((()=>{a({target:n.current})}),[]),Object(r.jsxs)(r.Fragment,{children:[Object(r.jsxs)("div",{className:"frame",children:[Object(r.jsx)("h1",{className:"frame__title",children:"AUDIO VISUALIZATION"}),Object(r.jsx)("div",{className:"frame__links"}),Object(r.jsxs)("div",{className:"frame__nav",children:[Object(r.jsx)("a",{className:"frame__link",href:"https://isengupt.github.io/fiber-website/",children:"Previous"}),Object(r.jsx)("a",{className:"frame__link",href:"#",children:"Resume"}),Object(r.jsx)("a",{className:"frame__link",href:"https://github.com/isengupt/digital-noise/",children:"GitHub"})]})]}),Object(r.jsxs)("div",{className:"container",onMouseMove:e=>o(e),children:[Object(r.jsx)(s.a,{colorManagement:!1,orthographic:!0,camera:{zoom:z.zoom,position:[0,0,500]},children:Object(r.jsxs)(c.Suspense,{fallback:Object(r.jsx)(v.a,{center:!0,className:"loading",children:"Loading..."}),children:[Object(r.jsx)(ie,{mouseMoved:o,mouseTarget:t,mouse:e}),Object(r.jsx)(ae,{})]})}),Object(r.jsx)("div",{className:"scrollArea",ref:n,onScroll:a,children:new Array(z.sections).fill().map(((e,t)=>Object(r.jsx)("div",{id:"0"+t,style:{height:"".concat(z.pages/z.sections*100,"vh")}},t)))})]})]})}i.a.render(Object(r.jsx)(ce,{}),document.getElementById("root"))}},[[36,1,2]]]);
//# sourceMappingURL=main.162e2953.chunk.js.map